{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Script documentation\
\

\f1\b 00_irrigationmaps.py\

\f0\b0 Output:\
	1) Create maps of amount of irrigation for IRR = 1850, IRR = 2000 (half), and IRR = 2000 
\f1\b (Figure 1)
\f0\b0 \
	2) Create maps with irrigated (local) vs non-irrigated (remote) grid cells based on a threshold of IRR >= 0.05mm/day 
\f1\b (Figure S1)
\f0\b0 \
\

\f1\b 00_calculate_TE.py\

\f0\b0 For each irrigation run, find the daily Equivalent Temperature (TE) for each grid cell using daily maximum temperature, daily minimum relative humidity, and monthly surface pressure. Create netcdf files for the TE data.\
\

\f1\b 00_TEmask.py\

\f0\b0 Create netcdf files to mask grid cells where more than 5% of daily minimum relative humidity data points exceed 100%
\f1\b \
\
01_tsmax_thresholds.py\

\f0\b0 Find the daily 90th percentile threshold (15-day centered window) of maximum temperature based on the non-irrigated dataset (IRR = 1850) for each grid cell.\
\

\f1\b 01_TE_thresholds.py\

\f0\b0 Find the daily 90th percentile threshold (15-day centered window) of equivalent temperature based on the non-irrigated dataset (IRR = 1850) for each grid cell.\
\

\f1\b 02_tsmax_eventfreqandbvars_dailythresholds_JJAfinal.py\

\f0\b0 Find the heat wave event frequency based on maximum temperature, where heat waves are 3 or more days\
Output: Create maps of maximum temperature heat wave event frequency 
\f1\b (Figure 2)
\f0\b0 \
\

\f1\b 02_TE_eventfreqandbvars_dailythresholds_JJAfinal.py
\f0\b0 \
Find the heat wave event frequency based on equivalent temperature, where heat waves are 3 or more days\
Output: Create maps of equivalent temperature heat wave event frequency 
\f1\b (Figure 3)
\f0\b0 \
\

\f1\b 03a_plotseasonalaveragesfrommonthlydata_alleventtypes.py\

\f0\b0 Plot JJA averages for all relevant climate variables (latent heat flux, sensible heat flux, specific humidity, precipitation, incident solar radiation, and total cloud cover).\
Output: \
	1) Create maps of JJA seasonal averages of climate variables (IRR2000-NONIRR) 
\f1\b (Figure 4)\

\f0\b0 	2) Create maps of JJA seasonal averages of climate variables (IRR2000half-NONIRR) 
\f1\b (Figure S2)\

\f0\b0 \

\f1\b 03b_wilcoxonsrtest_seasonalaveragesfrommonthlyvalues.py\

\f0\b0 Conduct Wilcoxon Signed-Rank test for seasonal averages from monthly climate data\
Output: Create netcdfs which denote which grid cells are not significantly different between model runs\
\

\f1\b 04a_localvsremotePDFs_eventsandbackgroundvars.py\

\f0\b0 Output: Create local and remote PDF plots for all irrigation runs 
\f1\b (Figure 5)
\f0\b0  
\f1\b \

\f0\b0 \

\f1\b 04b_localvsremote_differencedPDFs_frommonthlydata.py\

\f0\b0 Output: Create local and remote PDFs for key climate variables 
\f1\b (Figure 6, FigureS3)\
\
05_regionalPDFs_localvsremote_diff_eventfreqandbackgroundvars.py\

\f0\b0 Output: Create differenced local vs remote PDFs for SREX regions 
\f1\b (Figure 7, Figures S4-6)\
}